// -----------------------------------------------------------------------------
// Application-wide Sass functions
// -----------------------------------------------------------------------------

@use 'sass:math';
@use 'sass:list';
@use 'variables' as global;

@function strip-unit($num) {
  @return math.div($num, ($num * 0 + 1));
}

/// Return rem value from px value
@function to-rem($value, $base-value: global.$rem-base) {
  $value: math.div(strip-unit($value), strip-unit($base-value)) * 1rem;
  // Turn 0rem into 0
  @if ($value == 0rem) {
    $value: 0;
  }

  @return $value;
}

/// Return array of rem values from array of px values
@function rem-calc($values, $base-value: global.$rem-base) {
  $max: list.length($values);

  @if $max == 1 {
    @return to-rem(list.nth($values, 1), $base-value);
  }

  $rem-values: ();

  @for $i from 1 through $max {
    $rem-values: append($rem-values, to-rem(list.nth($values, $i), $base-value));
  }

  @return $rem-values;
}

/* Returns the space of the columns in width percentage */
@function cols-space($col-ratio, $col-unit) {
  @return $col-unit * $col-ratio;
}
