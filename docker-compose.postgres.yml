# Run: docker compose -f docker-compose.yml -f docker-compose.postgres.yml up --build
services:
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=nestino
      # Add extensions you need to be enabled by default in the database
      # - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology
    volumes:
      - postgresdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: "exit 0"
  app:
    build:
      context: .
      dockerfile: dev.postgres.Dockerfile
    command: sh -c "python manage.py wait_for_db && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - frontend
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings.dev_postgres
      - ENVIRONMENT=development
      - DEV_TOOL=docker
      - DB_NAME=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=nestino
volumes:
  postgresdata:
